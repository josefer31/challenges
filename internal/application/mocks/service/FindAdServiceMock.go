// Code generated by mockery v2.27.1. DO NOT EDIT.

package mocks

import (
	service "polaris/internal/application/service"

	mock "github.com/stretchr/testify/mock"
)

// FindAdService is an autogenerated mock type for the FindAdService type
type FindAdService struct {
	mock.Mock
}

type FindAdService_Expecter struct {
	mock *mock.Mock
}

func (_m *FindAdService) EXPECT() *FindAdService_Expecter {
	return &FindAdService_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: request
func (_m *FindAdService) Execute(request service.FindAdRequest) *service.FindAdResponse {
	ret := _m.Called(request)

	var r0 *service.FindAdResponse
	if rf, ok := ret.Get(0).(func(service.FindAdRequest) *service.FindAdResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*service.FindAdResponse)
		}
	}

	return r0
}

// FindAdService_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type FindAdService_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - request service.FindAdRequest
func (_e *FindAdService_Expecter) Execute(request interface{}) *FindAdService_Execute_Call {
	return &FindAdService_Execute_Call{Call: _e.mock.On("Execute", request)}
}

func (_c *FindAdService_Execute_Call) Run(run func(request service.FindAdRequest)) *FindAdService_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(service.FindAdRequest))
	})
	return _c
}

func (_c *FindAdService_Execute_Call) Return(_a0 *service.FindAdResponse) *FindAdService_Execute_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *FindAdService_Execute_Call) RunAndReturn(run func(service.FindAdRequest) *service.FindAdResponse) *FindAdService_Execute_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewFindAdService interface {
	mock.TestingT
	Cleanup(func())
}

// NewFindAdService creates a new instance of FindAdService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewFindAdService(t mockConstructorTestingTNewFindAdService) *FindAdService {
	mock := &FindAdService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
